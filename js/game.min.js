var Location=function(a,b){this.row=Math.floor(a);this.col=Math.floor(b)};Location.direction={west:180,east:0,south:90,left:90,right:-90};Location.signChart=[{row:-1,col:1},{row:-1,col:-1},{row:1,col:-1},{row:1,col:1}];Location.prototype.getAdjacentLocation=function(a){return new Location(this.row+Math.sin(degToRad(a)),this.col+Math.cos(degToRad(a)))};Location.prototype.equals=function(a){var b=this.row===a.row&&this.col===a.col;return b};Location.prototype.moveTo=function(a){var b=this.row+Math.sin(degToRad(a));var c=this.col+Math.cos(degToRad(a));return new Location(b,c)};Location.prototype.getDirectionTowards=function(a){var b=-a.row-this.row;var c=a.col-this.col;var d;if(c==0&&b==0)d=0;else d=Math.atan2(b,c);return radToDeg(d)};var Block=function(){this.positions=[];this.newPositions=[];this.blockTypes=["B","I","T","Z","S","J","L","O"];this.blockColors=["black","blue","coral","BurlyWood","Gold","Teal","PaleVioletRed","green"];this.location=null;this.color="";this.blockTypeIndex=0};Block.prototype.create=function(a){this.blockTypeIndex=typeof a!==null?a:1;this.color=this.blockColors[this.blockTypeIndex];this["create"+this.blockTypes[this.blockTypeIndex]+"Block"](this.color)};Block.prototype.createIBlock=function(a){this.positions=[new Location(0,0),new Location(0,1),new Location(0,2),new Location(0,3)]};Block.prototype.createTBlock=function(a){this.positions=[new Location(0,0),new Location(0,1),new Location(1,1),new Location(0,2)]};Block.prototype.createZBlock=function(a){this.positions=[new Location(0,0),new Location(0,1),new Location(1,1),new Location(1,2)]};Block.prototype.createSBlock=function(a){this.positions=[new Location(0,0),new Location(1,0),new Location(1,1),new Location(2,1)]};Block.prototype.createJBlock=function(a){this.positions=[new Location(0,0),new Location(1,0),new Location(2,0),new Location(2,-1)]};Block.prototype.createLBlock=function(a){this.positions=[new Location(0,0),new Location(1,0),new Location(2,0),new Location(2,1)]};Block.prototype.createOBlock=function(a){this.positions=[new Location(0,0),new Location(0,1),new Location(1,0),new Location(1,1)]};Block.prototype.getBlockType=function(a){return this.blockTypes[a]};Block.prototype.getBlockTypeIndex=function(){return this.blockTypeIndex};Block.prototype.getBlockColor=function(a){return this.blockColors[a]};Block.prototype.hasLocation=function(a){var b=false;for(var c=0;c<4&&!b;c++){var d=this.positions[c].row+this.location.row;var e=this.positions[c].col+this.location.col;b=a.equals(new Location(d,e))}return b};var Board=function(a,b){this.maxRows=a;this.maxCols=b;this.changedCells=[];this.filledLines=[];this.map=new Array(this.maxRows+2);for(var c=0;c<=this.maxRows+1;c++){this.map[c]=(new Array(this.maxCols+2)).fill(0)}};Board.prototype.getCellValue=function(a){return this.map[a.row][a.col]};Board.prototype.setCellValue=function(a,b){this.map[a.row][a.col]=b};Board.prototype.getChangedCells=function(){return this.changedCells};Board.prototype.setChangedCells=function(a){this.changedCells=a};Board.prototype.add=function(a,b){a.location=b;for(var c=0;c<4;c++){var d=b.row+a.positions[c].row;var e=b.col+a.positions[c].col;var f=new Location(d,e);this.setCellValue(f,a.blockTypeIndex);this.changedCells.push(f)}console.log("Done")};Board.prototype.isValidLocation=function(a){var b=a.row>=0&&a.row<=this.maxRows&&a.col>=1&&a.col<=this.maxCols;if(b===false){console.log("cannot keep moving")}return b};Board.prototype.canMove=function(a,b){var c=true;var d=a.location;for(var e=0;e<4&&c===true;e++){var f=d.row+a.positions[e].row+Math.floor(Math.sin(degToRad(b)));var g=d.col+a.positions[e].col+Math.floor(Math.cos(degToRad(b)));var h=new Location(f,g);c=this.isValidLocation(h);if(c&&!a.hasLocation(h))c=this.map[h.row][h.col]===0;if(c)a.newPositions.push(h);else a.newPositions=[]}return c};Board.prototype.move=function(a,b){var c=a.location;var d=a.blockTypeIndex;for(var e=0;e<4;e++){var f=new Location(c.row+a.positions[e].row,c.col+a.positions[e].col);this.setCellValue(f,0);this.changedCells.push(f)}for(var e=0;e<4;e++){var g=a.newPositions[e];this.setCellValue(g,d);this.changedCells.push(g)}a.location=c.moveTo(b);a.newPositions=[]};Board.prototype.canTurn=function(a,b){var c=a.location;var d=a.positions[0];var e=true;for(var f=0;f<4&&e===true;f++){var g=d.getDirectionTowards(a.positions[f]);var h=g+b;var i=getQuarant(h);var j=Math.abs(a.positions[f].col)*Location.signChart[i].row;var k=Math.abs(a.positions[f].row)*Location.signChart[i].col;var l=new Location(j,k);var m=new Location(c.row+j,c.col+k);e=this.isValidLocation(m);if(e&&!a.hasLocation(m))e=this.map[m.row][m.col]===0;if(e)a.newPositions.push(l);else a.newPositions=[]}return e};Board.prototype.turn=function(a,b){var c=a.location;var d=a.blockTypeIndex;for(var e=0;e<4;e++){var f=new Location(c.row+a.positions[e].row,c.col+a.positions[e].col);this.setCellValue(f,0);this.changedCells.push(f)}for(var e=0;e<4;e++){var g=new Location(a.newPositions[e].row+c.row,a.newPositions[e].col+c.col);this.setCellValue(g,d);this.changedCells.push(g)}a.positions=a.newPositions;a.newPositions=[]};Board.prototype.scanFilledLines=function(){for(var a=1;a<=this.maxRows;a++){var b=0;for(var c=1;c<=this.maxCols;c++){if(this.getCellValue(new Location(a,c))>0)b++}if(b==this.maxCols){this.filledLines.push(a);console.log("Line "+a+" is filled!")}}return this.filledLines};Board.prototype.moveEverythingDownFromLine=function(a){for(var b=a;b>0;b--)this.map[b]=this.map[b-1];this.map[0].fill(0);this.map[1].fill(0)};Board.prototype.canAdd=function(a,b){var c=true;this.map[0].fill(0);this.map[1].fill(0);console.log("Adding Block "+a.getBlockType(a.blockTypeIndex));for(var d=0;d<4&&c;d++){var e=new Location(a.positions[d].row+b.row,a.positions[d].col+b.col);c=this.getCellValue(e)===0;if(c===false){console.log("Current cell location: ("+e.row+", "+e.col+"): "+this.getCellValue(e));console.log("Map value is: "+this.map[e.row][e.col])}}this.printMap();return c};Board.prototype.printMap=function(){for(var a=0;a<=this.maxRows+1;a++){console.log(this.map[a])}};var Tetris=function(){this.board=new Board(15,10);this.currentBlock=null;this.startingLocation=new Location(1,5);this.score=0};Tetris.prototype.getCurrentBlock=function(){return this.currentBlock};Tetris.prototype.setCurrentBlock=function(a){this.currentBlock=a};Tetris.prototype.generateNewBlock=function(){var a=Math.ceil(Math.random()*7);var b=new Block;b.create(a);var c=this.board;if(c.canAdd(b,this.startingLocation)){c.add(b,this.startingLocation);this.currentBlock=b}else{this.gameOver()}};Tetris.prototype.moveBlock=function(a){var b=this.board;var c=this.getCurrentBlock();var d=b.canMove(c,a);if(d){b.move(c,a);this.setCurrentBlock(c);this.redraw(b)}else b.newPositions=[];return d};Tetris.prototype.fallingBlock=function(){var a=this.moveBlock(Location.direction["south"]);if(!a){this.scanFilledLine();this.generateNewBlock();this.redraw()}};Tetris.prototype.turnBlock=function(a){var b=this.board;var c=this.currentBlock;if(b.canTurn(c,a)){b.turn(c,a);this.setCurrentBlock(c);this.redraw(b)}else b.changedCells=[]};Tetris.prototype.redraw=function(){var a=this.board;var b=a.changedCells;for(var c=0;c<b.length;c++){var d=b[c];if(c<4)$("#box"+d.row+d.col).attr("class","box block0");else{var e=a.getCellValue(d);$("#box"+d.row+d.col).attr("class","box block"+e)}}a.changedCells=[]};Tetris.prototype.draw=function(){var a=this.board;$("#gamePanel").html("");for(var b=1;b<=a.maxRows;b++){for(var c=1;c<=a.maxCols;c++){$("<div></div>").attr("id","box"+b+c).addClass("box "+"block"+a.getCellValue(new Location(b,c))).appendTo("#gamePanel")}}};Tetris.prototype.scanFilledLine=function(){var a=0;var b=this.board;var c=b.scanFilledLines();var d=c.length;if(d>0){var e=this.score+d;this.updateScore(e);while(d>0){var f=c[--d]+a;b.moveEverythingDownFromLine(f);a++}b.filledLines=[];this.draw()}};Tetris.prototype.updateScore=function(a){this.score=a;$("#score").text(a)};Tetris.prototype.gameOver=function(){$("#gamePanel").html("<h1>Game Over!</h1>");clearInterval(window.intervalCode)};Tetris.prototype.start=function(){this.generateNewBlock();this.draw(this.board)}